<% breadcrumb :users %>

<%= render PageHeaderComponent.new(title: "Users") do |c| %>
  <% c.with_supporting_text do %>
    Streamline your team management with our employee list, featuring detailed information, contact details, and performance tracking.
  <% end %>

  <% c.with_actions do %>
    <%= link_to new_user_path, class: "btn btn--primary" do %>
      <%= inline_svg_tag "icons/plus", class: "h-5 w-5 stroke-current" %>
      Invite user
    <% end %>
  <% end %>
<% end %>

<div>
  <%= turbo_frame_tag "users-table" do %>
    <div class="flex flex-row items-center justify-between py-3">
      <%= search_form_for(@query, url: users_path, class: "form", data: { turbo_action: "advance" }) do |f| %>
        <div class="flex flex-row items-center gap-4">
          <%= render(ButtonFilterComponent.new(label: "Email", value: @filtering_values[:email], size: :large)) do %>
            <div class="flex flex-col gap-3 p-3">
              <span class="text-sm font-medium">Filter by Email</span>
              <div class="flex gap-2 items-center">
                <label class="text-sm text-gray-700">is equal to</label>
                <div class="flex-1">
                  <%= f.text_field :account_email_eq, escape: false, class: "block rounded-md border-gray-300 text-sm shadow-sm focus:border-primary-400 focus:ring focus:ring-primary-200 focus:ring-opacity-50 w-full" %>
                </div>
              </div>
              <%= f.submit "Apply", class: "btn btn--block btn--primary btn--extra-small" %>
            </div>
          <% end %>

          <%= render(ButtonFilterComponent.new(label: "Status", value: @filtering_values[:statuses])) do %>
            <div class="flex flex-col gap-3 p-3">
              <span class="text-sm font-medium">Filter by Status</span>
              <%= f.collection_check_boxes :by_status,
                                           Employee.filter_statuses.keys,
                                           proc { |c| c },
                                           proc { |c| c.humanize },
                                           include_hidden: false do |b| %>
                <div class="flex gap-2 items-center">
                  <%= b.check_box(class: "h-4 w-4 rounded border border-gray-300 bg-white") %>
                  <%= b.label(class: "text-sm text-gray-700") %>
                </div>
              <% end %>
              <%= f.submit "Apply", class: "btn btn--block btn--primary btn--extra-small" %>
            </div>
          <% end %>

          <%= render(ButtonFilterComponent.new(label: "Roles", value: @filtering_values[:roles])) do %>
            <div class="flex flex-col gap-3 p-3">
              <span class="text-sm font-medium">Filter by Roles</span>
              <%= f.collection_check_boxes :by_roles, @roles,
                                           proc { |c| c.id.to_s },
                                           proc { |c| c.name.humanize },
                                           include_hidden: false do |b| %>
                <div class="flex gap-2 items-center">
                  <%= b.check_box(class: "h-4 w-4 rounded border border-gray-300 bg-white") %>
                  <%= b.label(class: "text-sm text-gray-700") %>
                </div>
              <% end %>
              <%= f.submit "Apply", class: "btn btn--block btn--primary btn--extra-small" %>
            </div>
          <% end %>

          <%= render(ButtonFilterComponent.new(label: "Position", value: @filtering_values[:position], size: :large)) do %>
            <div class="flex flex-col gap-3 p-3">
              <span class="text-sm font-medium">Filter by Position</span>
              <div class="flex flex-col gap-2.5">
                <%= f.fields_for :c, @position_condition || f.object.send("build_condition") do |c| %>
                  <%= c.hidden_field :a, name: "query[c][][a][]", value: "position" %>
                  <%= c.predicate_select({ only: ["eq", "start", "end"], compounds: false },
                    { name: "query[c][][p]", class: "block w-full rounded-md border-gray-300 text-sm shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50" }) %>
                  <%= f.text_field :v, name: "query[c][][v][]",
                                       value: c.object.values.first.value,
                                       class: "block rounded-md border-gray-300 text-sm shadow-sm focus:border-primary-400 focus:ring focus:ring-primary-200 focus:ring-opacity-50 w-full" %>
                <% end %>
              </div>
              <%= f.submit "Apply", class: "btn btn--block btn--primary btn--extra-small" %>
            </div>
          <% end %>
        </div>
      <% end %>

      <div class="flex flex-row items-center gap-4 p-0">
        <%= button_to users_path, method: :get,
                                  class: "btn btn--link-gray",
                                  form: { data: { turbo_action: "advance" } },
                                  disabled: params[:query].blank? do %>
          <%= inline_svg_tag "icons/x-close", class: "stroke-current h-3 w-3" %>
          Clear Filters
        <% end %>
      </div>
    </div>
    <% if @pagy.count > 0 %>
      <table class="table table--hoverable">
        <thead>
          <tr>
            <th scope="col">Name</th>
            <th scope="col">Position</th>
            <th scope="col">Roles</th>
            <th scope="col">Experience</th>
            <th scope="col">Status</th>
            <th scope="col">
              <span class="sr-only">Edit</span>
            </th>
          </tr>
        </thead>
        <tbody>
          <% @users.decorate.each do |user| %>
            <% account = user.account.decorate %>
            <tr>
              <td>
                <%= link_to user_path(user), class: "unstyled-link" do %>
                  <div class="flex flex-col items-start">
                    <h3 class="text-sm font-normal text-gray-900"><%= user.name %></h3>
                    <p class="text-sm font-normal text-gray-600"><%= account.email %></p>
                  </div>
                <% end %>
              </td>
              <td>
                <%= link_to user_path(user), class: "unstyled-link" do %>
                  <%= user.position || "-" %>
                <% end %>
              </td>
              <td>
                <%= link_to user_path(user), class: "unstyled-link" do %>
                <div class="flex flex-row gap-1">
                  <% user.assignments.each do |a| %>
                    <%= render BadgeComponent.new(title: a.role.name.humanize, status: 'outline-indigo', size: :small) %>
                  <% end %>
                </div>
                <% end %>
              </td>
              <td>
                <%= link_to user_path(user), class: "unstyled-link" do %>
                  <%= user.total_experience %>
                <% end %>
              </td>
              <td>
                <%= link_to user_path(user), class: "unstyled-link" do %>
                  <% if account.unverified? %>
                    <%= render BadgeComponent.new(title: account.status.humanize, status: account.status_badge, size: :small) %>
                  <% else %>
                    <%= render BadgeComponent.new(title: user.status.humanize, status: user.status_badge, size: :small) %>
                  <% end %>
                <% end %>
              </td>
              <td class="text-right">
                <%= link_to "Edit", edit_user_path(user), class: "btn btn--link-color" %>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
      <%== pagy_nav(@pagy) if @pagy.pages > 1 %>
    <% else %>
      <%= render EmptyStateComponent.new(title: "No users yet") do |c| %>
        <% c.with_description { "Start adding your team member here and stay organized." } %>
        <% c.with_actions do %>
          <%= link_to new_user_path, class: "btn btn--primary" do %>
            <%= inline_svg_tag "icons/plus", class: "h-5 w-5 stroke-current" %>
            Invite user
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
</div>
